server:
  listenAddress: 0.0.0.0
  port: 8090
  mode: debug

logging:
  # debug, info, warn, error, fatal, panic
  level: "debug"
  # console or json
  format: "console"
  
security:
  authN:
    provider: ["basic", "openid"]
    openid:
      clientId: confidential-oidc-client
      clientSecret: secret1
      issuerUri: http://keycloak:7080/realms/master
      redirectUri: http://localhost:8090/oauth2/callback
      cookieSecret: secret1!
      scope: "openid+profile+email+roles"
      rolesAttributePath: "realm_access.roles"
      groupsAttributePath: "realm_access.groups"
    bearer:
      issuerUri: http://keycloak:7080/realms/master
      jwksURL: http://keycloak:7080/realms/master/protocol/openid-connect/certs
      rolesAttributePath: "realm_access.roles"
      groupsAttributePath: "realm_access.groups"
      skipIssuerCheck: true
      skipSignatureCheck: false
    # Static users for sandbox testing
    basic:
      - login: "dev1"
        password: "passW!"
        firstName: "dev1"
        lastName: "dev"
        email: "dev1.dev@example.org"
        roles: ["developers", "team1"]
  authZ:
    provider: file
    file:
      modelPath: "testdata/security/authz-model.conf"
      policyPath: "testdata/security/authz-policy.csv"
    database:
      host: "localhost"
      port: 5432
      username: "adm"
      password: "passDB!"
      name: "okdp"
  cors:
    allowedOrigins: ["*"]
    allowedMethods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
    allowedHeaders: ["Accept", "Authorization", "Content-Type", "X-CSRF-Token"]
    exposedHeaders: ["Link"]
    allowCredentials: true 
    maxAge: 3600
  headers:
    x-frame-options: "DENY"
    x-content-type-options: nosniff

swagger:
  securitySchemes:
    oauth2:
      type: "oauth2"
      flows:
        authorizationCode:
          authorizationUrl: "http://keycloak:7080/realms/master/protocol/openid-connect/auth"
          tokenUrl: "http://keycloak:7080/realms/master/protocol/openid-connect/token"
          scopes: 
            openid: "OpenId Authentication"
            email: "User Email"
            profile: "User Profile"
            roles: "User Roles"
  security:
    - oauth2: [openid, email, profile, roles]

kad:
  - id: sandbox
    name: Sandbox de idir
    apiUrl: https://host.docker.internal:6553/api/kad/v1
    authBearer: JUDtoP55C2dLfeaXqSbehhKKRdmAWTfj
    insecureSkipVerify: true
  
