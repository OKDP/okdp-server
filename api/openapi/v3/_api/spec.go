// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"H5wpD3c3u/8HAAD//1IAWClISgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
