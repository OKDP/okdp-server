// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"8nB3s/t/AAAA//8s9WrIakoAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
