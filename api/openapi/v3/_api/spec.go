// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"KIs3V5v/BQAA//9CJ63ODGQAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
