// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xbX2/bOBL/KoLuHu4A10q7B9zBT9dL2iLbblskTReHXFDQ0tjmWiK1JJXUW+S7HyiK",
	"EkWR+hO7Wbfoy6KxyPk/85shuV/CmGY5JUAEDxdfQh5vIEPlPxNYYYIFpuTTKRIopWv5a85oDkxgKNe0",
	"N2MBWfkPscshXIRcMEzW4f1M/4AYQzv5N0EZuBdClqdIwCR697OQwe8FZpCEi2tFfGbKZtK9qXfT5W8Q",
	"i3AWfs5SyUUJFcaVspKsaQNNrmuFLSaJU0yeQ9xdjtKU3p0yQALeogx4jmLTGEtKU0BE7i9XfkRpAdy9",
	"oJJ1ovVjSlbY4U1MuEBp6nDzGGEZZJBgJI3VpaA/whvExUuE04J5yQiGW/qSIlsC67jZSbLZ3/Gzvd9W",
	"qq1Bd/ssFDgDWginjYt8zVACfs2/FbP0G8FarCOmsU1jCZcFY0oEfBaXZZXpmuMlTt1l4WeurGd9sKQp",
	"t1eLZ+F/UZY6hUggB5Lwd+RANStHDGUggKnsTpKyYKD0vaGbYAVIzjxmOFexEL7BXAR0FZT75fYA8WAL",
	"u+hWZnyQI8zK0mXL3/D7c+2YMyogFpB4IpamMLEwcVqwGDwVE5KPwDimZCLRBFaoSEW12blljcUF5JRj",
	"Qdmuy97reeKoiGZciI27VpAMEbR2G84NZiUtc6fJ3OWcDaRZn04xMHEJMQNxASunlPEGMXetw0QAu0Wp",
	"G/N6iRYsHY4/uUjzN7iZtGeWAi4T0BjvZwFMOMTeivw4VqhleLAhLLJ2LnUSxE4H25Cd2HLZnhdcFllf",
	"bSg4WruT5rbudiiBd6twcd1d1F9kLVluJFFv7ruz7bY2Rd1gaZnr7snU0ayFdRVrAYOjattoWOve7vtm",
	"7n5R11cTzpyOEEgUvBv9wBhlTg+sfODhwh0HOHmKHoMUEJ+KCAILpzSW31YKsaoqqXRzmryWQpMezJey",
	"ua9a+dqcw0NEPS34xogLJcne00Tsn0uq8tP+8a0PzD6OTZK3Kkn0elfUXXqAfHQi3vYQr90q+5R2PLW5",
	"ndG4yCrLdNT19khX5I6h3PnpV/eHe9esYAXyozeJ/c3ZQH1uqvB0SdXeUWJaTld45iurl/1lVQWDUZ4r",
	"HQ44AQBBy9RnMgWKZU7LBPn0ydsxPqCVnNxLu3FNK2AcjrQaSZcW+wLNw44oFC8gMZ6KGHsB21eP+L6p",
	"wNMTTYS60DKe0bhoT3xtzNPQZkHfyxSJnlO0h55lVQS9uGaLNbywb1TsrQE5irdo7edQfe+jv1/d1sec",
	"b4fOV4dsodeNbgpM1TuK2m5y2NqSvSuBx5FulcxS58MTfzrYgb1qBa4V1a9R4jiwyPGVa8abhZ+frOmT",
	"iu7z9+dXF2/Kg95CbP4DiIG7cuFkiNT5mTmwXm5x/hEYXu2qg3w531nzkRE1HlCyz/r0oYMcSZR+LcGd",
	"7Adtu0WJbdFLYLfAXug63rZsBtw7OzYQVH2SE/MaWFM3hnTU1Gta1cZBNbghs0Md7GqGW2HVLnt/ZbJ1",
	"D/8SNZcYUXU1E3krql0dZYRQlsiY+ocMDl4u5VgfRddxsUIp7waGsf0nb5AYi556mo4235mt9ijTSvtZ",
	"Zv3QTvu956jewj54X3VMw9fjjhrOHr6vRR/sPki7rhvF/Ov3nfEGpwkDcvQ95/RLg6/edta2e7yW08J+",
	"u0ZccWDvGdVOsBI+Q9h9eLtmtMgnBk5K15hMG/keckFSLIc6AV64DSy3ajFrHFc2qDXWMg3avTAMe3+v",
	"zrsLhsWuPGireqA4Bs4/CbpV6bQs24SXlGVIhIvw518/SEeX62Wx1U1ExXgjRC41XiKO4+eFCt5mtfy1",
	"u5jKduSZwlZ6p6QoxIYy/Ed5oXlK1Q1t68eyUStJLKJoC7s4pWi7+OfJv04iBijNeJQhLoBFsnmkMU0j",
	"mgPByZOYEgKxiCS1UhWatyIrlOEXvKhMrDaFi/BdDuQ8CaROQASOUYWLuQ5UtU+bt44T9fNF+YcMDWnX",
	"vWVX3jFPsJQJS6fCZwGMoPSMxtWLELMSvXt99j5IqiM2rURRC8QXUUS3ST7HNFK96Yqq80oiUCxMO+EE",
	"szn+AwtaECDw722xpAKlc0x1pFbcYpplBcFi18upLeaHDeYB5gEKLl5cfgievz8PGKyAAYkhWFEWiA0E",
	"JXXVd8okwTEQ1VLoTj1H8QaCZ/OTDue7u7s5Kj/PKVtH1V4evTk/ffH28sWTZ/OT+UZkqXGaHRrsKqly",
	"bFw7LMKn85P5SRnRORCU43AR/lT+pCpw6Y1oqyaPNYiuc0qYQGkavH5+FqgjsYJBEpQX9iQuzwVkMSz9",
	"dp5UO16j5NxYwIDnlFRn9s9OTrT7qvEd5XlahW/0W3WxzD030g3fB7S5csQaOuFqGDig5t6HotI6zc7m",
	"sniSpiO1uGyNCB2RqnCAeoTgRZYhthvpTIFkq3NdzlM3crsMj+jLtvHoeXLvDZdXIFq2CJa7oIKIdpS8",
	"AjNI2h3A4tom2yJ5flaOiOFCNxHNBNiIGJpeVf0Pty+b6g7l5nsO0ZbttNNVmT3WOO2JolHhGcXNO8P+",
	"qqb7yv8RZx07bW5tv5/4dA40I32qH3AOhWhfv+4tohJA641HX0ONG30dlI3WQ5EZfZFB0V9HkWYRyJZH",
	"54AjUl+BDtQ/OU5nNr9KLJ28DmbVl8fLhamB3g2OU8MrcgY59krqjqOJYavlM19fOCNX0IT6qql17s6P",
	"LVxf4lQAkxbSJgn+JkcFFHCQggpI/q6F+L2A8g2T9dj7Ecu4yyWT63nnqm2osHe4Tq7wmkJQkzj+Wt+V",
	"2UifrknG59FIILD5D6CB7dVjg4WOOgcEiG8tqx+cqQ5k6tj1G8IoX4jvm2l8xBRQrx1Crh+QdRDI2g+r",
	"xoPUHuj0LaGSE43GJcdU/BmHO8cLOD+AZkKafa8I04MsfVlTPSAYASh6pQdOLjWhH2DycDAxvTEVSvRT",
	"miEgqXlMhZF649GDCG9iUSdDo7U3FfR9+eBxQM1H76gnKE9uWM9xfuTIPjnictPUXLHfRw3lTIfnpNyx",
	"o+T4E6grcpNJXVuMzqhxjZnNvL8/s115ZKn1wVbmR7M2OTm7Mdyx6rfTsfmiezjDCg6MR9kubx5tebMo",
	"2wVyeVCtdafOLzvjHc3hCrRkPMGgV63nUtb/5itJjam1v7T1PeoYsHxjOL70sPS28WisrGHGQ6/rG5n3",
	"+jHXtX461TxXy623UTcyb9UTbFUQ1ROdCOU4un0ayq8VfzuQrtpS2i+e2k991lhsiuU8pln53qj8zxPF",
	"tnnoV2nYrVyvkfFiw7rRPwzn8i19h68xtRyCidEie64ND8XJuFMegpxDseyUpRGH4AdTt3NK2sP84Ex5",
	"eH9z//8AAAD//8+6P7cOSgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
