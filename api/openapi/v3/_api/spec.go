// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
