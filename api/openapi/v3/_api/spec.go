// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"XPEtrPLES7C34UY1fX6d/xcAAP//S8Ymq6k6AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
