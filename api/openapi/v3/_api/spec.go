// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
