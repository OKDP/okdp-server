// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
