// Package _api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package _api

// Catalog defines model for Catalog.
type Catalog struct {
	Credentials *struct {
		RobotAccountName  *string `json:"robotAccountName,omitempty"`
		RobotAccountToken *string `json:"robotAccountToken,omitempty"`
	} `json:"credentials,omitempty"`
	Description string `json:"description"`
	ID          string `json:"id"`
	Name        string `json:"name"`
	Packages    []struct {
		Name string `json:"name"`
	} `json:"packages"`
	RepoURL string `json:"repoUrl"`
}

// GitCommit defines model for GitCommit.
type GitCommit struct {
	// Commit The hash of the commit
	Commit *string `json:"commit,omitempty"`

	// CommitMessage A commit Message
	CommitMessage *string `json:"commitMessage,omitempty"`

	// CommitterEmail Email of the committer
	CommitterEmail *string `json:"committerEmail,omitempty"`

	// CommitterName Name of the committer
	CommitterName *string `json:"committerName,omitempty"`

	// Force Whether to force commit
	Force *bool `json:"force,omitempty"`

	// TargetPath Target file path of the commit in the git repository
	TargetPath *string `json:"targetPath,omitempty"`
}

// Package defines model for Package.
type Package struct {
	// Name The name of the package
	Name string `json:"name"`

	// Versions A list of versions for the package
	Versions []string `json:"versions"`
}

// ServerError defines model for ServerError.
type ServerError struct {
	Message string `json:"message"`
	Status  int    `json:"status"`
	Type    string `json:"type"`
}

// UserProfile defines model for UserProfile.
type UserProfile struct {
	Email   string   `json:"email"`
	Groups  []string `json:"groups"`
	Login   string   `json:"login"`
	Name    string   `json:"name"`
	Roles   []string `json:"roles"`
	Subject string   `json:"sub"`
}
