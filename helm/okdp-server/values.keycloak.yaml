configuration:
  # -- List of Kubernetes clusters this chart will interact with
  clusters:
    - id: kubo2 # -- Unique identifier for the cluster
      name: "My k8s cluster 1" # -- Human-readable name for the cluster
      env: dev # -- Environment tag (e.g., dev, staging, prod)

      auth:
        # -- Use in-cluster authentication
        inCluster: true

        # kubeconfig:
        #   apiServer: https://host.docker.internal:56660 # -- Kubernetes API server address
        #   path: /tmp/.kube/config # -- Path to the kubeconfig file
        #   # context: kind-kind-okdp-sandbox # -- Optional: specify kubeconfig context to use
        #   insecureSkipTlsVerify: true # -- Skip TLS verification (not recommended in production)

        # -- Optional certificate-based authentication
        # certificate:
        #   apiServer: https://k8s-api-server-url:6443 # -- API server for certificate auth
        #   clientKey: /path/to/client-key.pem # -- Path to client key
        #   clientCert: /path/to/client-cert.pem # -- Path to client certificate
        #   caCert: /path/to/ca-cert.pem # -- Path to CA certificate

        # -- Optional bearer token authentication
        # bearer:
        #   apiServer: https://k8s-api-server-url:6443 # -- API server for bearer token auth
        #   bearerToken: $(BEARER_TOKEN) # -- Bearer token used to authenticate
  
  # -- List of catalogs available to this chart
  catalog:
    - id: storage # -- Unique identifier for the catalog
      name: "Storage catalog" # -- Human-readable name of the catalog
      description: "My Storage packages" # -- Description of the catalog's purpose
      repoUrl: quay.io/kubocd/packages # -- OCI registry URL to pull packages from

      # -- Credentials for private registries (optional)
      #credentials:
      #  robotAccountName: $(OCI_USERNAME) # -- Robot account username for private registry
      #  robotAccountToken: $(OCI_PASSWORD) # -- Robot account token for private registry
      #  dockerconfigjson: $(DOCKER_CONFIG_JSON) # -- Base64-encoded Docker config JSON

      # -- List of packages under this catalog
      packages:
        - name: redis # -- Name of the package
        - name: minio
        - name: cnpg

    - id: auth
      name: "Auth catalog"
      description: "My Auth packages"
      repoUrl: quay.io/kubocd/packages
      packages:
        - name: openldap

    - id: infra
      name: "Infra catalog"
      description: "My Infra packages"
      repoUrl: quay.io/kubocd/packages
      packages:
        - name: cert-manager
        - name: ingress-nginx
        - name: metallb

    - id: stack
      name: "Stack catalog"
      description: "My Stack packages"
      repoUrl: quay.io/kubocd/packages
      packages:
        - name: podinfo

  server:
    # -- Specify the Server listen address.
    listenAddress: 0.0.0.0
    # -- Specify the Server listen port.
    port: 8090
    # -- Specify the Server Mode. One of `debug`, `release` or `test`.
    mode: debug

  logging:
    # -- Specify the logging level. One of `debug`, `info`, `warn`, `error`, `fatal` or `panic`.
    level: "debug"
    # -- Specify the logging format. One of `console` or `json`.
    format: "console"

  security:
    authN:
      # -- Specify the oidc privider. One of `openid` or `bearer`.
      provider: ["bearer"]
      bearer:
        # -- Specify the issuer uri.
        issuerUri: "http://keycloak:7080/realms/master"
        # -- Specify the jwks URL.
        jwksURL: "http://keycloak:7080/realms/master/protocol/openid-connect/certs"
        # -- Specify the roles attribute path from json access token.
        rolesAttributePath: "realm_access.roles"
        # -- Specify the groups attribute path from json access token.
        groupsAttributePath: "realm_access.groups"
        # -- Wether to skip issuer check.
        skipIssuerCheck: false
        # -- Wether to skip issuer signature check.
        skipSignatureCheck: false
    authZ:
      # -- Specify the authZ storage provider. One of `inline` or `file`.
      provider: "inline"
      # -- The casbin policy contains the actual rules that determine who can access what.
      # -- Specify the casbin permissions to allow to an uri based on oidc groups/roles.
      # -- More info: https://casbin.org/docs/how-it-works/
      # file:
      #   modelPath: ".local/authz-model.conf"
      #   policyPath: ".local/authz-policy.csv"
      inline:
        policy: |
          p, role:viewers, /api/v1/users/myprofile, *
          p, role:viewers, /api/v1/kad, *
          p, role:viewers, /api/v1/kad/*/services, *
          p, role:viewers, /api/v1/kad/*/catalog, *
          p, role:viewers, /api/v1/kad/*/catalog/*, *
          p, role:viewers, /api/v1/kad/*/componentreleases, *
          p, role:viewers, /api/v1/kad/*/componentreleases/*, *
          p, role:viewers, /api/v1/kad/*/templatereleases, *
          p, role:viewers, /api/v1/kad/*/templatereleases/*, *
          p, role:viewers, /api/v1/kad/*/components, *
          p, role:viewers, /api/v1/kad/*/components/*, *

          g, role:admins, role:developers
          g, role:developers, role:viewers
        # -- Specify the casbin model (enforcement logic).
        # -- More info: https://casbin.org/docs/how-it-works/
        model: |
          [request_definition]
          r = sub, obj, act

          [policy_definition]
          p = sub, obj, act

          [role_definition]
          g = _, _

          [policy_effect]
          e = some(where (p.eft == allow))

          [matchers]
          m = g(r.sub, p.sub) && keyMatch(r.obj, p.obj) && (r.act == p.act || p.act == "*")

    cors:
      # -- Specify the allowed origins for cross-origin requests. "*" allows all origins.
      allowedOrigins: ["*"]
      # -- Define the HTTP methods permitted for CORS requests.
      allowedMethods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD"]
      # -- List the headers that clients are allowed to include in requests.
      allowedHeaders: ["Origin", "Accept", "Authorization", "Content-Length", "Content-Type"]
      # -- Specify which response headers should be exposed to the client.
      exposedHeaders: ["Content-Length"]
      # -- Determine whether cookies and authentication credentials should be included in cross-origin requests.
      allowCredentials: true 
      # -- Define how long (in seconds) the results of a preflight request can be cached by the client.
      maxAge: 3600
    headers:
      # -- Prevent the page from being embedded in an iframe, mitigating clickjacking attacks.
      X-Frame-Options: "DENY"
      # -- Prevent browsers from MIME-sniffing a response away from the declared content type.
      X-Content-Type-Options: nosniff

  swagger:
    securitySchemes:
      # openId:
      #   type: openIdConnect
      #   openIdConnectUrl: http://keycloak.okdp.sandbox/realms/master/.well-known/openid-configuration
      # access_token:
      #   type: http
      #   scheme: bearer
      #   bearerFormat: JWT
      oauth2:
        type: oauth2
        flows:
          authorizationCode:
            authorizationUrl: http://keycloak:7080/realms/master/protocol/openid-connect/auth
            tokenUrl: http://keycloak:7080/realms/master/protocol/openid-connect/token
            scopes: 
              openid: OpenId Authentication
              email: User Email
              profile: User Profile
              roles: User Roles
    security:
      - oauth2: [openid, email, profile, roles]

swagger-ui:
  enabled: true
  configuration:
    extraEnv:
      - name: BASE_URL
        value: /swagger
      - name: URLS
        value: |
          [{ url: 'https://okdp-server.okdp.sandbox/api/v1/api-docs', name: 'OKDP Server' }]
      - name: OAUTH_CLIENT_ID
        value: public-oidc-client
      - name: OAUTH_SCOPES
        value: "openid profile email roles"
      - name: OAUTH_USE_PKCE
        value: "true"
      - name: CORS_ENABLED
        value: "true"
        
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: okdp-server.okdp.sandbox
        paths:
          - path: /swagger
            pathType: Prefix

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: okdp-server.okdp.sandbox
      paths:
        - path: /
          pathType: Prefix
